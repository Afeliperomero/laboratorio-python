# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QcI9wUdDgv3pIvppf97JGqqk9aAcmeKi
"""

# Programa para contar números pares e impares
def contar_pares_impares(numeros):
    pares = sum(1 for n in numeros if n % 2 == 0)
    impares = sum(1 for n in numeros if n % 2 != 0)
    return pares, impares


entrada = input("Ingresa una lista de números enteros separados por comas: ")
numeros = list(map(int, entrada.split(',')))

pares, impares = contar_pares_impares(numeros)
print(f"Números pares: {pares}")
print(f"Números impares: {impares}")

import pandas as pd

df = pd.read_csv('/CSV Laboratorio 2 AD-B.csv')

print(df.head())
print(df.info())
print(df.describe())

archivo = "/CSV Laboratorio 2 AD-B.csv"
df = pd.read_csv(archivo)

df['Ingresos_Totales'] = df['Cantidad_vendida'] * df['Precio_unitario']
print("\nDataFrame con la nueva columna 'Ingresos Totales':")
print(df.head())

print(df.columns)

filtro_unidades = df[df['Cantidad_vendida'] > 40]
print("\nProductos con más de 40 unidades vendidas:")
print(filtro_unidades)

print(df.columns)

precios_altos = df.nlargest(10, 'Precio_unitario')

print("\nLos 10 precios más altos:")
print(precios_altos)

import matplotlib.pyplot as plt

ventas_por_sucursal_mes = df.groupby(['Sucursal', 'Mes'])['Cantidad_vendida'].sum().reset_index()

plt.figure(figsize=(10, 6))
for sucursal in ventas_por_sucursal_mes['Sucursal'].unique():
    sucursal_data = ventas_por_sucursal_mes[ventas_por_sucursal_mes['Sucursal'] == sucursal]
    plt.bar(sucursal_data['Mes'], sucursal_data['Cantidad_vendida'], label=sucursal)

plt.xlabel('Mes')
plt.ylabel('Cantidad Vendida')
plt.title('Ventas por Sucursal y Mes')
plt.legend(title='Sucursal')
plt.show()

import seaborn as sns

plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='Precio_unitario', y='Cantidad_vendida')

plt.xlabel('Precio_unitario')
plt.ylabel('Cantidad_vendida')
plt.title('Relación entre Precio Unitario y Cantidad Vendida')
plt.show()

# Promedio de ingresos por sucursal
ingresos_promedio_sucursal = df.groupby('Sucursal')['Ingresos_Totales'].mean()

# Productos con mayores ingresos totales
productos_mayores_ingresos = df.sort_values(by='Ingresos_Totales', ascending=False).head(10)

print("Promedio de ingresos por sucursal:")
print(ingresos_promedio_sucursal)

print("\nTop 10 productos con mayores ingresos:")
print(productos_mayores_ingresos[['Producto', 'Ingresos_Totales']])